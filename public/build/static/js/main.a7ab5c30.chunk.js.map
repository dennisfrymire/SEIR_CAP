{"version":3,"sources":["images/1.png","images/2.png","images/3.png","Components/NavBar.js","Styles/layout.js","Components/Carousel.js","Components/Index.js","Components/NewForm.js","Components/Edit.js","Components/SignUpForm.js","Components/New.js","Components/CreateUser.js","Components/About.js","Components/NewUser.js","Components/LogInForm.js","Components/LogOutForm.js","App.js","index.js"],"names":["module","exports","NavBarItem","props","useState","collapsed","setCollapsed","Navbar","color","light","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","CarouselImage","styled","div","items","src","image1","altText","image2","image3","CarouselPage","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","slides","map","item","CarouselItem","onExiting","onExited","key","alt","CarouselCaption","captionText","caption","captionHeader","Container","fluid","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","Quote","Card","CardBody","CardText","quote","author","to","_id","deleteQuote","Index","bind","state","quotes","axios","get","then","response","setState","data","catch","error","console","log","id","delete","this","filter","el","currentquote","Row","Col","sm","quoteList","Component","NewForm","onChangeUsername","onChangeQuote","onChangeAuthor","onChangeTags","onSubmit","username","tags","array","users","user","e","target","value","preventDefault","quotePackage","post","res","window","location","type","required","onChange","SignUpForm","htmlFor","name","handleInput","handleSignUp","LogInForm","handleLogIn","LogOut","handleLogOut","App","email","password","isLoggedIn","localStorage","token","clear","err","NavBar","path","render","LogOutForm","React","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a7ab5c30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.9259c10c.png\";","module.exports = __webpack_public_path__ + \"static/media/2.17f70826.png\";","module.exports = __webpack_public_path__ + \"static/media/3.5168828c.png\";","  \nimport React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nconst NavBarItem = (props) => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <div>\n      <Navbar color=\"faded\" light>\n        <NavbarBrand href=\"/\" className=\"mr-auto\">Quote Me</NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink href=\"/signup\">Create User Account</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"./Components/About\">About</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBarItem;","import styled from 'styled-components';\n\n\n//images\nexport const CarouselImage = styled.div`\nimg {\n  width: 900;\n  height: 500;\n  margin: auto;\n}\n`;\n\nexport const CarouselPage = styled.div`\n\n{\n  bottom-margin: 10;\n}\n\n`;\n","import React, { useState } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n  Container\n} from 'reactstrap';\n\nimport { CarouselImage } from '../Styles/layout';\n\nimport image1 from \"../images/1.png\"\nimport image2 from \"../images/2.png\"\nimport image3 from \"../images/3.png\"\n\nconst items = [\n  {\n    \n    src: image1,\n    altText: 'Slide 1',\n    \n  },\n  {\n    src: image2,\n    altText: 'Slide 2',\n    \n  },\n  {\n    src: image3,\n    altText: 'Slide 3',\n    \n  }\n];\n\nconst CarouselPage = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      \n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n      <CarouselImage>\n        <img src={item.src} \n        className=\"d-block w-100\"\n        alt={item.altText} />\n        \n      </CarouselImage>\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\n      \n      </CarouselItem>\n      \n    );\n  });\n\n  return (\n    <Container className=\"themed-container\" fluid={true}>\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n    </Container>\n  );\n}\n\n\n\n\nexport default CarouselPage;","import React, {Component} from 'react';\nimport {\n  Card, CardText, CardBody, Button, Row, Col\n} from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport CarouselPage from \"./Carousel\";\nimport NavBarItem from \"./NavBar\";\n\nconst Quote = props => (\n  \n  \n  <Card>\n  <CardBody>\n    <CardText>{props.quote.quote}</CardText>\n    <CardText className= \"text-right\">{props.quote.author}</CardText>\n    <Link to={\"/update/\"+props.quote._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteQuote(props.quote._id) }}>delete</a>\n  </CardBody>\n  </Card>\n  \n\n  \n  \n  \n  \n  \n \n  \n)\n\nclass Index extends Component {\n\nconstructor(props) {\n  super(props);\n\n  this.deleteQuote = this.deleteQuote.bind(this);\n\n  this.state = {quotes: []};\n}\n\ncomponentDidMount() {\n  axios.get('http://localhost:3000/quotes/')\n  .then(response => {\n    this.setState({ quotes: response.data })\n  })\n  .catch((error) => {\n    console.log(error);\n  })\n}\n\ndeleteQuote(id) {\n  axios.delete('http://localhost:3000/quotes/'+id)\n    .then(response => { console.log(response.data)});\n\n  this.setState({\n    quotes: this.state.quotes.filter(el => el._id !== id)\n  })\n}\n\nquoteList() {\n  return this.state.quotes.map(currentquote => {\n    return <Quote quote={currentquote} deleteQuote={this.deleteQuote} key={currentquote._id}/>;\n  })\n}\n\n  render() {\n  return (\n    <div className=\"App\">\n      \n      \n      <Row>\n      \n      <Col sm='center'>\n      <Card>\n      \n        <CardBody className= \"text-left\">\n          <CardText>{this.quoteList()}</CardText>\n        </CardBody>\n      </Card>\n      </Col>\n      </Row>\n      \n      \n\n    </div>\n  );\n}\n}\n\nexport default Index;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { array } from 'prop-types';\n\nclass NewForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeQuote = this.onChangeQuote.bind(this);\n    this.onChangeAuthor = this.onChangeAuthor.bind(this);\n    this.onChangeTags = this.onChangeTags.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      quote: '',\n      author: '',\n      tags: array,\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3000/users/')\n      .then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            users: response.data.map(user => user.username),\n            username: response.data[0].username\n          })\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n  }\n\nonChangeUsername(e) {\n  this.setState({\n    username: e.target.value\n  })\n};\n\nonChangeQuote(e) {\n  this.setState({\n    quote: e.target.value\n  })\n};\n\nonChangeAuthor(e) {\n  this.setState({\n    author: e.target.value\n  })\n};\n\nonChangeTags(e) {\n  this.setState({\n    tags: e.target.value\n  })\n};\n\nonSubmit(e) {\n  e.preventDefault();\n\n  const quotePackage = {\n    username: this.state.username,\n    quote: this.state.quote,\n    author: this.state.author,\n    tags: this.state.tags\n  }\n\nconsole.log(quotePackage);\n\naxios.post('http://localhost:3000/quotes/add', quotePackage)\n      .then(res => console.log(res.data));\n\nwindow.location = '/';\n\n\n}\n        \n// handleChange = (event) => {\n// const updateInput = Object.assign( this.state.formInputs, { [event.target.id]: event.target.value })\n// this.setState(updateInput)\n// }\n      \n//       handleSubmit = (event) =>{\n//         event.preventDefault()\n//         fetch('http://localhost:3000/quotes', {\n//           body: JSON.stringify(this.state.formInputs),\n//           method: 'POST',\n//        headers: {\n//          'Accept': 'application/json, text/plain, */*',\n//          'Content-Type': 'application/json'\n//        }\n//       })\n//        .then(createdQuote => {\n//          return createdQuote.json()\n//        })\n      \n//        .then(jsonedQuote => {\n//          // reset the form\n//          this.setState({\n//            formInputs: {\n//              title: '',\n//              quote: '',\n//              author: '',\n//              tags: ['']\n//             },\n//            quotes: [jsonedQuote, ...this.state.quotes]\n//          })\n//        })\n//        .catch(error => console.log(error))\n//       }\n      \n//        componentDidMount() {\n//         this.getQuotes()\n//       }\n      \n//       getQuotes = () =>{\n//         fetch('http://localhost:3000/quotes')\n//           .then(response => response.json())\n//           .then(json => this.setState({quotes: json}))\n//           .catch(error => console.error(error))\n//       }\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state({\n    //         formInputs: {\n    //         quote: '',\n    //         author: '',\n    //         tags: ['']\n    //     };\n    \n    //     this.handleChange = this.handleChange.bind(this);\n    //     this.handleSubmit = this.handleSubmit.bind(this);\n    //   }\n    \n    //   handleChange(event) {\n    //     this.setState({value: event.target.value});\n    //   }\n    \n    //   handleSubmit(event) {\n    //     alert('A name was submitted: ' + this.state.value);\n    //     event.preventDefault();\n    //   }\n\n\n    // state = {\n    //     quote: '',\n    //     author: '',\n    //     tags: ['']\n    // }\n\n    // handleChange = (event) => {\n    //     // setState is a built-in method of the React library\n    //     this.setState({\n    //         [event.target.id]: event.target.value\n    //     })\n    // }\n\n    // handleSubmit = (event, newFormState) => {\n    //     event.preventDefault();\n        \n    //     console.log(newFormState)\n    //     fetch('/quotes', {\n    //         body: JSON.stringify(newFormState),\n    //         method: \"POST\",\n    //         headers: {\n    //             'Accept': 'application/json, text/plain, */*',\n    //             'Content-Type': 'application/json'\n    //         }\n    //     }).then(response => response.json())\n    //         .then(newQuote => {\n    //             console.log(newQuote)\n    //             this.setState({\n    //                 userQuotes: [...this.state.userQuotes, newQuote],\n                    \n\n    //             })\n    //         })\n    // }\n\n    // clearForm = () => {\n    //     this.setState({\n    //     quote: '',\n    //     author: '',\n    //     tags: ['']\n    //     })\n    // }\n\n    // {(ev) => this.props.handleSubmit(ev, this.state, this.clearForm())}\n\n    render() {\n      return (\n      <div className=\"text-left\">\n        <h3>Create New Quote</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label>Quote </label>\n            <input type=\"textarea\"\n                required\n                className=\"form-control\"\n                value={this.state.quote}\n                onChange={this.onChangeQuote}\n                />\n            \n          </div>\n          <div className=\"form-group\"> \n            <label>Author</label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.author}\n                onChange={this.onChangeAuthor}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Tags</label>\n            <input \n                type=\"text\" \n                className=\"form-control\"\n                value={this.state.tags}\n                onChange={this.onChangeTags}\n                />\n          </div>\n          \n  \n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Create Quote\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n      )\n    }\n  }\n// render () {\n//   return (\n//     <Form onSubmit={this.onSubmit}>\n//     <FormGroup row>\n//         <Label sm={2}>Quote</Label>\n//         <Col sm={10}>\n//           <Input type=\"textarea\" id=\"newQuote\" placeholder=\"To be or not to be...\"  onChange={this.handleChange}  />\n//         </Col>\n//       </FormGroup>\n//       <FormGroup row>\n//         <Label for=\"author\" sm={2}>Author</Label>\n//         <Col sm={10}>\n//           <Input type=\"text\" name=\"author\" id=\"newAuthor\" onChange={this.handleChange} placeholder=\"Abraham Lincoln, Anonymous...\" />\n//         </Col>\n//       </FormGroup>\n//       <FormGroup row>\n//         <Label for=\"tags\" sm={2}>Tags</Label>\n//         <Col sm={10}>\n//           <Input type=\"text\" name=\"tags\" id=\"newTags\" onChange={this.handleChange} placeholder=\"Motivation, Love, etc.\">\n            \n//           </Input>\n//         </Col>\n//       </FormGroup>\n      \n      \n      \n//       <FormGroup check row>\n//         <Col sm={{ size: 10, offset: 2 }}>\n//           <Button>Submit</Button>\n//         </Col>\n//       </FormGroup>\n//     </Form>\n//   );\n// }\n// };\n\nexport default NewForm;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { array } from 'prop-types';\n\nclass Edit extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeQuote = this.onChangeQuote.bind(this);\n    this.onChangeAuthor = this.onChangeAuthor.bind(this);\n    this.onChangeTags = this.onChangeTags.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      // username: '',\n      quote: '',\n      author: '',\n      tags: array,\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3000/quotes/'+this.props.match.params.id)\n      .then(response => {\n          this.setState({\n            // username: response.data.username,\n            quote: response.data.quote,\n            author: response.data.author,\n            tags: response.data.tags\n          })\n        })\n\n      .catch((error) => {\n        console.log(error);\n      })\n\n      // axios.get('http://localhost:3000/users/')\n      // .then(response => {\n      //   if (response.data.length > 0) {\n      //     this.setState({\n      //       users: response.data.map(user => user.username),\n      //     })\n      //   }\n      // })\n      // .catch((error) => {\n      //   console.log(error);\n      // })\n\n  }\n\n// onChangeUsername(e) {\n//   this.setState({\n//     username: e.target.value\n//   })\n// };\n\nonChangeQuote(e) {\n  this.setState({\n    quote: e.target.value\n  })\n};\n\nonChangeAuthor(e) {\n  this.setState({\n    author: e.target.value\n  })\n};\n\nonChangeTags(e) {\n  this.setState({\n    tags: e.target.value\n  })\n};\n\nonSubmit(e) {\n  e.preventDefault();\n\n  const quote = {\n    // username: this.state.username,\n    quote: this.state.quote,\n    author: this.state.author,\n    tags: this.state.tags\n  }\n\n\n\naxios.post('http://localhost:3000/quotes/update/' + this.props.match.params.id, quote)\n      .then(res => console.log(res.data));\n\nwindow.location = '/';\n\n\n}\n        \n// handleChange = (event) => {\n// const updateInput = Object.assign( this.state.formInputs, { [event.target.id]: event.target.value })\n// this.setState(updateInput)\n// }\n      \n//       handleSubmit = (event) =>{\n//         event.preventDefault()\n//         fetch('http://localhost:3000/quotes', {\n//           body: JSON.stringify(this.state.formInputs),\n//           method: 'POST',\n//        headers: {\n//          'Accept': 'application/json, text/plain, */*',\n//          'Content-Type': 'application/json'\n//        }\n//       })\n//        .then(createdQuote => {\n//          return createdQuote.json()\n//        })\n      \n//        .then(jsonedQuote => {\n//          // reset the form\n//          this.setState({\n//            formInputs: {\n//              title: '',\n//              quote: '',\n//              author: '',\n//              tags: ['']\n//             },\n//            quotes: [jsonedQuote, ...this.state.quotes]\n//          })\n//        })\n//        .catch(error => console.log(error))\n//       }\n      \n//        componentDidMount() {\n//         this.getQuotes()\n//       }\n      \n//       getQuotes = () =>{\n//         fetch('http://localhost:3000/quotes')\n//           .then(response => response.json())\n//           .then(json => this.setState({quotes: json}))\n//           .catch(error => console.error(error))\n//       }\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state({\n    //         formInputs: {\n    //         quote: '',\n    //         author: '',\n    //         tags: ['']\n    //     };\n    \n    //     this.handleChange = this.handleChange.bind(this);\n    //     this.handleSubmit = this.handleSubmit.bind(this);\n    //   }\n    \n    //   handleChange(event) {\n    //     this.setState({value: event.target.value});\n    //   }\n    \n    //   handleSubmit(event) {\n    //     alert('A name was submitted: ' + this.state.value);\n    //     event.preventDefault();\n    //   }\n\n\n    // state = {\n    //     quote: '',\n    //     author: '',\n    //     tags: ['']\n    // }\n\n    // handleChange = (event) => {\n    //     // setState is a built-in method of the React library\n    //     this.setState({\n    //         [event.target.id]: event.target.value\n    //     })\n    // }\n\n    // handleSubmit = (event, newFormState) => {\n    //     event.preventDefault();\n        \n    //     console.log(newFormState)\n    //     fetch('/quotes', {\n    //         body: JSON.stringify(newFormState),\n    //         method: \"POST\",\n    //         headers: {\n    //             'Accept': 'application/json, text/plain, */*',\n    //             'Content-Type': 'application/json'\n    //         }\n    //     }).then(response => response.json())\n    //         .then(newQuote => {\n    //             console.log(newQuote)\n    //             this.setState({\n    //                 userQuotes: [...this.state.userQuotes, newQuote],\n                    \n\n    //             })\n    //         })\n    // }\n\n    // clearForm = () => {\n    //     this.setState({\n    //     quote: '',\n    //     author: '',\n    //     tags: ['']\n    //     })\n    // }\n\n    // {(ev) => this.props.handleSubmit(ev, this.state, this.clearForm())}\n\n    render() {\n      return (\n      <div>\n        <h3>Edit Quote</h3>\n        <form onSubmit={this.onSubmit}>\n        {/* <div className=\"form-group\"> \n          <label>Username: </label>\n          <select ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}>\n              {\n                this.state.users.map(function(user) {\n                  return <option \n                    key={user}\n                    value={user}>{user}\n                    </option>;\n                })\n              }\n          </select>\n        </div> */}\n          <div className=\"form-group\"> \n            <label>Quote </label>\n            <input type=\"textarea\"\n                required\n                className=\"form-control\"\n                value={this.state.quote}\n                onChange={this.onChangeQuote}\n                />\n            \n          </div>\n          <div className=\"form-group\"> \n            <label>Author</label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.author}\n                onChange={this.onChangeAuthor}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Tags</label>\n            <input \n                type=\"text\" \n                className=\"form-control\"\n                value={this.state.tags}\n                onChange={this.onChangeTags}\n                />\n          </div>\n          \n  \n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Edit Quote\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n      )\n    }\n  }\n// render () {\n//   return (\n//     <Form onSubmit={this.onSubmit}>\n//     <FormGroup row>\n//         <Label sm={2}>Quote</Label>\n//         <Col sm={10}>\n//           <Input type=\"textarea\" id=\"newQuote\" placeholder=\"To be or not to be...\"  onChange={this.handleChange}  />\n//         </Col>\n//       </FormGroup>\n//       <FormGroup row>\n//         <Label for=\"author\" sm={2}>Author</Label>\n//         <Col sm={10}>\n//           <Input type=\"text\" name=\"author\" id=\"newAuthor\" onChange={this.handleChange} placeholder=\"Abraham Lincoln, Anonymous...\" />\n//         </Col>\n//       </FormGroup>\n//       <FormGroup row>\n//         <Label for=\"tags\" sm={2}>Tags</Label>\n//         <Col sm={10}>\n//           <Input type=\"text\" name=\"tags\" id=\"newTags\" onChange={this.handleChange} placeholder=\"Motivation, Love, etc.\">\n            \n//           </Input>\n//         </Col>\n//       </FormGroup>\n      \n      \n      \n//       <FormGroup check row>\n//         <Col sm={{ size: 10, offset: 2 }}>\n//           <Button>Submit</Button>\n//         </Col>\n//       </FormGroup>\n//     </Form>\n//   );\n// }\n// };\n\nexport default Edit;","import React, { Component } from 'react'\n\n\nclass SignUpForm extends Component {\n  render () {\n    return (\n      <div>\n        <h2>Sign Up</h2>\n\n        <form>\n          <div>\n            <label htmlFor='email'>Email</label>\n            <input type='text' name='email' onChange={this.props.handleInput} />\n          </div>\n\n          <div>\n            <label htmlFor='password'>Password</label>\n            <input type='text' name='password' onChange={this.props.handleInput} />\n          </div>\n          <input value='Submit' type='submit' onClick={this.props.handleSignUp} />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SignUpForm","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport NewForm from './NewForm';\n\nclass New extends Component {\n\n  render() {\n  return (\n    <div className=\"App\">\n      <NewForm />\n    </div>\n  );\n}\n}\n\nexport default New;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass CreateUser extends Component {\n    render() {\n        return (\n            <div>\n                <h2>This is the create user component</h2>\n            </div>\n        )\n    }\n}\n\nexport default CreateUser;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"text-left\">\n                <h2>This is the About page</h2>\n            </div>\n        )\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: ''\n    }\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username\n    }\n\n    console.log(user);\n\n    axios.post('http://localhost:3000/users/add', user)\n      .then(res => console.log(res.data));\n\n    this.setState({\n      username: ''\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Create New User</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label>Username: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\n\nclass LogInForm extends Component {\n  render () {\n    return (\n      <div>\n        <h2>Log In</h2>\n\n        <form>\n          <div>\n            <label htmlFor='email'>Email</label>\n            <input type='text' name='email' onChange={this.props.handleInput} />\n          </div>\n          <div>\n            <label htmlFor='password'>Password</label>\n            <input type='text' name='password' onChange={this.props.handleInput} />\n          </div>\n          <input value='Submit' type='submit' onClick={this.props.handleLogIn} />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogInForm\n","import React, { Component } from 'react'\n\n\nclass LogOut extends Component {\n  render () {\n    return (\n      <div>\n        <h2>Log Out</h2>\n\n        <form>\n          <input value='Log Out' type='submit' onClick={this.props.handleLogOut} />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogOut\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Container, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport NavBar from \"./Components/NavBar\";\nimport CarouselPage from \"./Components/Carousel\";\nimport Index from \"./Components/Index\";\nimport EditQuote from \"./Components/Edit\";\nimport CreateQuote from \"./Components/New\";\nimport CreateUser from \"./Components/CreateUser\";\nimport About from \"./Components/About\";\nimport NewUser from \"./Components/NewUser\";\nimport SignUpForm from \"./Components/SignUpForm\";\nimport LogInForm from \"./Components/LogInForm\";\nimport LogOutForm from \"./Components/LogOutForm\";\n\nimport './App.css';\nimport New from './Components/New';\n\n\nclass App extends React.Component {\n\n  constructor () {\n    super()\n\n    this.state = {\n      email: '',\n      password: '',\n      isLoggedIn: false\n    }\n\n    this.handleLogOut = this.handleLogOut.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n    this.handleLogIn = this.handleLogIn.bind(this)\n    this.handleSignUp = this.handleSignUp.bind(this)\n  }\n\n  componentDidMount () {\n    if (localStorage.token) {\n      this.setState({\n        isLoggedIn: true\n      })\n    } else {\n      this.setState({\n        isLoggedIn: false\n      })\n    }\n  }\n\n  handleLogOut () {\n    this.setState({\n      email: '',\n      password: '',\n      isLoggedIn: false\n    })\n    localStorage.clear()\n  }\n\n\n  handleInput (e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\nhandleSignUp(e) {\n      e.preventDefault()\n      axios.post('http://localhost:3000/users/signup', {\n          email: this.state.email,\n          password: this.state.password\n        })\n          .then(response => {\n              localStorage.token = response.data.token\n              this.setState({\n                  isLoggedIn: true\n              })\n          })\n          .catch(err => console.log(err))\n  }\n\n  handleLogIn (e) {\n    e.preventDefault()\n    axios.post('http://localhost:3000/users/login', {\n        email: this.state.email,\n        password: this.state.password\n      })\n        .then(response => {\n            localStorage.token = response.data.token\n            this.setState({\n              isLoggedIn: true\n            })\n        })\n        .catch(err => console.log(err))\n  }\n\n  render () {\n    return (\n      <Container className=\"themed-container\" fluid={true}>\n        <NavBar isLoggedIn={this.state.isLoggedIn} />\n        <div className='body'>\n        <CarouselPage/>\n          <Switch>\n            <Route path='/signup'\n              render={(props) => {\n                return (\n                  <SignUpForm isLoggedIn={this.state.isLoggedIn} handleInput={this.handleInput} handleSignUp={this.handleSignUp} />\n                )\n              }}\n            />\n            <Route path='/logout'\n              render={(props) => {\n                return (\n                  <LogOutForm isLoggedIn={this.state.isLoggedIn} handleLogOut={this.handleLogOut} />\n                )\n              }}\n            />\n            <Route path='/login'\n              render={(props) => {\n                return (\n                  <LogInForm isLoggedIn={this.state.isLoggedIn} handleInput={this.handleInput} handleLogIn={this.handleLogIn} />\n                )\n              }}\n            />\n            <Route\n              path='/'\n              render={() => {\n                return (\n                  \n                  <Index isLoggedIn={this.state.isLoggedIn} />\n                )\n              }}\n            />\n          </Switch>\n        </div>\n      </Container>\n    )\n  }\n}\n//   render() {\n//   return (\n//     <div className=\"container\">\n    \n//       <NavBar />\n//       <CarouselPage/> \n      \n//       <Route path=\"/\" exact component={Index} />\n//       {/* <Route path=\"/\" exact component={ShowQuote} /> */}\n//       <Route path=\"/signup\" exact component={SignUpForm}/>\n//       {/* <New/>\n//       <NewUser/> */}\n//       <Route path=\"/update/:id\" exact component={EditQuote} />\n//       <Route path=\"/Components/New\" exact component={CreateQuote} />\n//       <Route path=\"/user\" exact component={CreateUser} />\n//       <About />\n//       </div>\n    \n    \n//   );\n// }\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, \n  Switch, \n  Route, \n  Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}